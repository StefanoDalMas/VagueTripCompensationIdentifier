DATA CREATION
- modificare quantità di acutal per ogni driver porta a capire meglio cosa piace al driver e quindi a generare una perfect route migliore.
    Questo si può dimostrare nel seguente modo:
        - calcolo la actual sulla base della perfect e calcolo la similarità tra la nuova actual e la perfect
            (da fare sia prima che dopo aver incrementato il numero di actual per ogni driver)
        - quello che ci aspettiamo di vedere è una similarità molto alta

- aumentare e restringere la finestra del numero di actual per ogni driver porta a dei pesi differenti quandi si crea la rec_standard.
    Questo si può dimostrare nel seguente modo:
        - (FACILE) facendo vedere nella matrice dei pesi per ogni driver che la varinza è grande
        - (DIFFICILE) prendere una rec_standard, prendere i due driver che hanno rispettivamente il peso più alto e più basso,
            calcola la similarità tra la rec_standard e le rispettive perfect dei due driver.
            Ci aspettiamo che sim(perfect[driver_importante], rec_standard) > sim(perfect[driver_non_importante], rec_standard)



mettere a posto divisione per 0 -> controllare caso in cui 
vengano eliminate tutte le città durante la creazione di una actual con driver con crazyness alta



-----------
result = dataset + result
- (no results) tabella tempi esecuzione punto 3 con merch incrementale
- (yes results) testare punto 1 e 2 tenendo (test_rec_sim.py)
    + fai 5 dataset tenendo tempi e risultati
- (no results) fissare data_merch 3 e cambiare min support 
- (no result) driver crazyness e come cambia sim -> fatto
- (no result) cambia dim window in WINDOW_TEST. Mostra risultato con win_size = 80
- (yes result) fare i due test sopra 